pipeline {
    agent any
    
    stages {
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t mathgenius .'
            }
        }
        stage('Test') {
            steps {
                echo 'Running tests...'
                sh '''
                    docker run --rm \
                    -e FLASK_ENV=testing \
                    mathgenius \
                    pytest --verbose --junit-xml=test-reports/results.xml tests/
                '''
            }
            post {
                always {
                    sh 'docker cp $(docker ps -lq):/app/test-reports/results.xml test-reports/results.xml || true'
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Clean Up') {
            steps {
                echo 'Cleaning up Docker images...'
                sh '''
                    docker rmi mathgenius || true
                    docker image prune -f
                '''
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
